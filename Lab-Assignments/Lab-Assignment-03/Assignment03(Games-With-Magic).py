# -*- coding: utf-8 -*-
"""Part_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GfoZ-SIPLurg_-8J6ngKOeqCfzcFRg9D
"""

class pacman_game:
    def __init__(self, magic_price):
        self.input = [3, 6, 2, 3, 7, 1, 2, 0]
        self.magic_price = magic_price
        self.no_magic_price = None
        self.including_magic_price = None

    def minimax_including_alpha_beta(self, leaf_, p, maximize, alpha, beta, magic_used):
        if leaf_ == 3:
            return self.input[p]

        if maximize:
            best = float('-inf')
            pos = 0
            while pos < 2:
                outcome = self.minimax_including_alpha_beta(leaf_ + 1, p * 2 + pos, False, alpha, beta, magic_used)
                if outcome > best:
                    best = outcome
                alpha = max(alpha, best)
                if beta <= alpha:
                    break
                pos += 1
            if magic_used:
                return best - self.magic_price
            return best
        else:
            best = float('inf')
            pos = 0
            while pos < 2:
                outcome = self.minimax_including_alpha_beta(leaf_ + 1, p * 2 + pos, True, alpha, beta, magic_used)
                if outcome < best:
                    best = outcome
                beta = min(beta, best)
                if beta <= alpha:
                    break
                pos += 1
            return best

    def run_game(self):

        self.no_magic_price = self.minimax_including_alpha_beta(0, 0, True, float('-inf'), float('inf'), False)


        self.including_magic_price = self.minimax_including_alpha_beta(0, 0, True, float('-inf'), float('inf'), True)


        result = f"The optimal minimax outcome is {self.including_magic_price}. Pacman "
        if self.including_magic_price > self.no_magic_price:
            result += " uses dark magic."
        else:
            result += "is not using dark magic."

        print(result)


if __name__ == "__main__":
    magic_price = int(input())


    game = pacman_game(magic_price)


    game.run_game()
